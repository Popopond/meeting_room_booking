<%= render "shared/date_selector", start_date: @start_date %>

<%= turbo_frame_tag "schedule_calendar" do %>
  <% rooms = Room.all %>
  <div class="bg-white rounded-3xl border border-gray-100 shadow-sm p-8">
    <div class="overflow-x-auto">
      <div class="max-h-[600px] overflow-y-auto relative">
        <table class="w-full min-w-[1000px] border-collapse">
          <!-- Header with rooms -->
          <thead>
            <tr class="border-b border-gray-200">
              <th class="p-4 w-32 border-r border-gray-200 sticky left-0 top-0 bg-white z-30">เวลา</th>
              <% rooms.each do |room| %>
                <th class="p-3 px-6 font-medium border-r border-gray-200 last:border-r-0 sticky top-0 bg-white z-20">
                  <div><%= room.name %></div>
                  <div class="text-sm text-gray-400">จุ <%= room.capacity %> คน</div>
                </th>
              <% end %>
            </tr>
          </thead>

          <!-- Time slots -->
          <tbody>
            <% (8..18).each do |hour| %>
              <% ["00", "30"].each do |minute| %>
                <% next if hour == 18 && minute == "30" %>
                <% next_hour = minute == "30" ? hour + 1 : hour %>
                <% next_minute = minute == "30" ? "00" : "30" %>
                <tr class="border-b border-gray-200">
                  <td class="p-3 px-6 font-medium text-center border-r border-gray-200 sticky left-0 bg-white z-10 whitespace-nowrap">
                    <%= "#{hour.to_s.rjust(2, '0')}:#{minute}-#{next_hour.to_s.rjust(2, '0')}:#{next_minute}" %>
                  </td>
                  
                  <% rooms.each do |room| %>
                    <% current_time = @selected_date.to_time.change(hour: hour, min: minute.to_i).in_time_zone('Asia/Bangkok') %>
                    <% next_time = current_time + 30.minutes %>
                    <% 
                      room_bookings = @bookings[room.id] || []
                      slot_start_time = current_time
                      slot_end_time = current_time + 30.minutes
                      
                      booking = room_bookings.find do |b|
                        b.booking_slots.any? do |slot|
                          booking_start = slot.start_time.in_time_zone('Asia/Bangkok')
                          booking_end = slot.end_time.in_time_zone('Asia/Bangkok')
                          check_in_deadline = booking_start + 15.minutes
                          current_time_bangkok = Time.current.in_time_zone('Asia/Bangkok')
                          
                          # ตรวจสอบว่าช่วงเวลาซ้อนทับกันหรือไม่
                          (slot_start_time >= booking_start && slot_start_time < booking_end) ||
                          (slot_end_time > booking_start && slot_end_time <= booking_end) ||
                          (booking_start >= slot_start_time && booking_end <= slot_end_time)
                        end
                      end
                    %>
                    <% 
                      current_time_bangkok = Time.current.in_time_zone('Asia/Bangkok')
                      is_past_deadline = current_time_bangkok > (current_time + 15.minutes)
                      is_past_datetime = is_past_deadline
                    %>
                    <% is_past_booking = booking && is_past_datetime %>
                    <% status = booking ? 'Unavailable' : 'Available' %>
                    
                    <td class="p-2 border-r border-gray-200 last:border-r-0">
                      <% if status == 'Unavailable' %>
                        <%= content_tag(:div, class: "rounded-2xl border #{is_past_booking ? 'border-gray-300 bg-gray-50' : 'border-[#4475FF]/30 bg-[#F5F8FF]'} p-4 text-center") do %>
                          <div class="<%= is_past_booking ? 'text-gray-500' : 'text-[#4475FF]' %> font-medium">Unavailable</div>
                          <% if booking.title.present? %>
                            <div class="text-sm <%= is_past_booking ? 'text-gray-500' : 'text-[#4475FF]' %> mt-1"><%= booking.title %></div>
                          <% end %>
                          <div class="text-sm <%= is_past_booking ? 'text-gray-500' : 'text-[#4475FF]' %> mt-1"><%= booking.user.username %></div>
                        <% end %>
                      <% else %>
                        <%= content_tag(:div, 
                          class: "rounded-2xl border #{is_past_datetime ? 'border-gray-200 bg-gray-50 cursor-not-allowed' : 'border-[#0BA811]/30 bg-[#EBFFF3] cursor-pointer time-slot'} p-4 text-center",
                          data: {
                            room_id: room.id,
                            date: @selected_date,
                            start_time: current_time,
                            end_time: current_time + 30.minutes
                          }) do %>
                          <div class="#{is_past_datetime ? 'text-gray-400' : 'text-[#0BA811]'} font-medium">
                            <%= is_past_datetime ? "-" : "Available" %>
                          </div>
                        <% end %>
                      <% end %>
                    </td>
                  <% end %>
                </tr>
              <% end %>
            <% end %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
<% end %>

<script>
document.addEventListener('DOMContentLoaded', function() {
  let selectedSlots = new Set()
  let selectedRoomId = null
  let selectedDate = null
  let selectedTimes = []

  // เพิ่มฟังก์ชันเลื่อนไปยังเวลาปัจจุบัน
  function scrollToCurrentTime() {
    const now = new Date()
    const hours = now.getHours()
    const minutes = now.getMinutes()
    
    // หาช่วงเวลาที่เหมาะสม
    let targetHour = hours
    let targetMinute = "00"
    
    // ถ้านาทีมากกว่า 30 และยังไม่เกิน 45 นาที ให้ชี้ไปที่ช่วง 30
    if (minutes > 30 && minutes <= 45) {
      targetMinute = "30"
    } 
    // ถ้านาทีน้อยกว่า 15 นาที ให้ชี้ไปที่ช่วงก่อนหน้า
    else if (minutes <= 15) {
      if (targetMinute === "30") {
        targetMinute = "00"
      } else {
        targetHour = hours - 1
        targetMinute = "30"
      }
    }
    // ถ้านาทีมากกว่า 15 แต่ไม่เกิน 30 ให้ชี้ไปที่ช่วง 00
    else if (minutes > 15 && minutes <= 30) {
      targetMinute = "00"
    }
    
    const currentTimeString = `${targetHour.toString().padStart(2, '0')}:${targetMinute}`
    
    // รอให้ DOM โหลดเสร็จสมบูรณ์
    setTimeout(() => {
      const tableContainer = document.querySelector('.overflow-y-auto')
      if (!tableContainer) return

      const timeSlots = document.querySelectorAll('td:first-child')
      let targetSlot = null

      // หาช่องเวลาที่ตรงกับเวลาปัจจุบัน
      for (const slot of timeSlots) {
        if (slot.textContent.startsWith(currentTimeString)) {
          targetSlot = slot
          break
        }
      }

      // ถ้าไม่เจอเวลาตรง ให้หาเวลาที่ใกล้เคียง
      if (!targetSlot) {
        for (const slot of timeSlots) {
          const slotTime = slot.textContent.split('-')[0].trim()
          if (slotTime > currentTimeString) {
            targetSlot = slot
            break
          }
        }
      }

      // เลื่อนไปยังช่องเวลาที่พบ
      if (targetSlot) {
        // เลื่อนทั้งหน้าเว็บ
        const yOffset = -100; // ระยะห่างจากด้านบนของหน้าจอ
        const y = targetSlot.getBoundingClientRect().top + window.pageYOffset + yOffset;
        
        window.scrollTo({
          top: y,
          behavior: 'smooth'
        });

        // เลื่อนตารางด้วย
        const containerRect = tableContainer.getBoundingClientRect()
        const targetRect = targetSlot.getBoundingClientRect()
        const scrollOffset = targetRect.top - containerRect.top - (containerRect.height / 2) + tableContainer.scrollTop

        setTimeout(() => {
          tableContainer.scrollTo({
            top: scrollOffset,
            behavior: 'smooth'
          });

          // เพิ่มไฮไลท์ชั่วคราวที่ช่องเวลาปัจจุบัน
          targetSlot.style.transition = 'background-color 0.5s'
          targetSlot.style.backgroundColor = '#f0f0f0'
          setTimeout(() => {
            targetSlot.style.backgroundColor = ''
          }, 2000)
        }, 100);
      }
    }, 500)
  }

  // เรียกใช้ฟังก์ชันเลื่อนไปยังเวลาปัจจุบันเมื่อโหลดหน้า
  scrollToCurrentTime()

  // เพิ่ม event listener ให้กับทุก time slot
  document.querySelectorAll('.time-slot').forEach(slot => {
    slot.addEventListener('click', function(e) {
      e.preventDefault()
      const roomId = this.dataset.roomId
      const date = this.dataset.date
      const startTime = this.dataset.startTime
      const endTime = this.dataset.endTime

      // ถ้าเลือกห้องอื่น ให้ล้างการเลือกเดิม
      if (selectedRoomId && selectedRoomId !== roomId) {
        clearSelection()
      }

      selectedRoomId = roomId
      selectedDate = date

      // เพิ่ม/ลบ slot ที่เลือก
      if (this.classList.contains('selected')) {
        this.classList.remove('selected', 'bg-violet-100', 'text-violet-800', 'border-violet-500')
        selectedSlots.delete(this)
        selectedTimes = selectedTimes.filter(time => 
          time.start !== startTime && time.end !== endTime
        )
      } else {
        this.classList.add('selected', 'bg-violet-100', 'text-violet-800', 'border-violet-500')
        selectedSlots.add(this)
        selectedTimes.push({ start: startTime, end: endTime })
      }

      // อัพเดทปุ่ม Add Event
      updateAddEventButton()
    })
  })

  function clearSelection() {
    selectedSlots.forEach(slot => {
      slot.classList.remove('selected', 'bg-violet-100', 'text-violet-800', 'border-violet-500')
    })
    selectedSlots.clear()
    selectedRoomId = null
    selectedDate = null
    selectedTimes = []
    updateAddEventButton()
  }

  function updateAddEventButton() {
    const addEventButton = document.querySelector('.add-event-button')
    if (addEventButton) {
      if (selectedSlots.size > 0) {
        addEventButton.classList.remove('opacity-50', 'cursor-not-allowed')
        addEventButton.classList.add('hover:bg-violet-600')
        const timeParams = selectedTimes.map((time, index) => 
          `slots[${index}][start_time]=${time.start}&slots[${index}][end_time]=${time.end}`
        ).join('&')
        addEventButton.href = `/bookings/new?room_id=${selectedRoomId}&date=${selectedDate}&${timeParams}`
      } else {
        addEventButton.classList.add('opacity-50', 'cursor-not-allowed')
        addEventButton.classList.remove('hover:bg-violet-600')
        addEventButton.href = '#'
      }
    }
  }
})
</script>