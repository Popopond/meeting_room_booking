<%= render "shared/date_selector", start_date: @start_date %>

<%= turbo_frame_tag "schedule_calendar" do %>
  <% rooms = Room.all %>
  <div class="bg-white rounded-3xl border border-gray-100 shadow-sm p-8">
    <div class="overflow-x-auto">
      <table class="w-full min-w-[1000px] border-collapse">
        <!-- Header with rooms -->
        <tr class="border-b border-gray-200">
          <th class="p-4 w-32 border-r border-gray-200">เวลา</th>
          <% rooms.each do |room| %>
            <th class="p-3 px-6 font-medium border-r border-gray-200 last:border-r-0"><%= room.name %></th>
          <% end %>
        </tr>

        <!-- Time slots -->
        <% (8..18).each do |hour| %>
          <% ["00", "30"].each do |minute| %>
            <% next if hour == 18 && minute == "30" %>
            <% next_hour = minute == "30" ? hour + 1 : hour %>
            <% next_minute = minute == "30" ? "00" : "30" %>
            <tr class="border-b border-gray-200">
              <td class="p-3 px-6 font-medium text-center border-r border-gray-200">
                <%= "#{hour}.#{minute}-#{next_hour}.#{next_minute}" %>
              </td>
              
              <% rooms.each do |room| %>
                <% current_time = @selected_date.to_time.change(hour: hour, min: minute.to_i) %>
                <% booking = room.bookings.where("start_time <= ? AND end_time > ?", current_time, current_time).first %>
                <% is_past_datetime = current_time < Time.current %>
                <% status = if booking && !booking.check_in_expired? && !booking.complete
                            'unavailable'
                          else
                            'available'
                          end %>
                
                <td class="p-2 border-r border-gray-200 last:border-r-0">
                  <% if status == 'unavailable' %>
                    <%= content_tag(:div, class: "rounded-2xl border border-[#4475FF]/30 bg-[#F5F8FF] p-4 text-center") do %>
                      <span class="text-[#4475FF] font-medium">Unavailable</span>
                      <div class="text-sm text-[#4475FF] mt-1"><%= booking.user.username %></div>
                    <% end %>
                  <% else %>
                    <%= content_tag(:div, 
                      class: "rounded-2xl border #{is_past_datetime ? 'border-gray-200 bg-gray-50 cursor-not-allowed' : 'border-[#0BA811]/30 bg-[#EBFFF3] cursor-pointer time-slot'} p-4 text-center",
                      data: {
                        room_id: room.id,
                        date: @selected_date,
                        start_time: current_time,
                        end_time: current_time + 30.minutes
                      }) do %>
                      <span class="#{is_past_datetime ? 'text-gray-400' : 'text-[#0BA811]'} font-medium">Available</span>
                    <% end %>
                  <% end %>
                </td>
              <% end %>
            </tr>
          <% end %>
        <% end %>
      </table>
    </div>
  </div>
<% end %>

<script>
document.addEventListener('DOMContentLoaded', function() {
  let selectedSlots = new Set()
  let selectedRoomId = null
  let selectedDate = null
  let selectedStartTime = null
  let selectedEndTime = null

  // เพิ่ม event listener ให้กับทุก time slot
  document.querySelectorAll('.time-slot').forEach(slot => {
    slot.addEventListener('click', function(e) {
      e.preventDefault()
      const roomId = this.dataset.roomId
      const date = this.dataset.date
      const startTime = this.dataset.startTime
      const endTime = this.dataset.endTime

      // ถ้าเลือกห้องอื่น ให้ล้างการเลือกเดิม
      if (selectedRoomId && selectedRoomId !== roomId) {
        clearSelection()
      }

      selectedRoomId = roomId
      selectedDate = date

      // เพิ่ม/ลบ slot ที่เลือก
      if (this.classList.contains('selected')) {
        this.classList.remove('selected', 'bg-blue-100', 'text-blue-800', 'border-blue-500')
        selectedSlots.delete(this)
      } else {
        this.classList.add('selected', 'bg-blue-100', 'text-blue-800', 'border-blue-500')
        selectedSlots.add(this)
        
        // ถ้าเป็น slot แรกที่เลือก ให้ตั้งค่าเวลาเริ่มต้น
        if (selectedSlots.size === 1) {
          selectedStartTime = startTime
        }
        // อัพเดทเวลาสิ้นสุดเป็นเวลาล่าสุดที่เลือก
        selectedEndTime = endTime
      }

      // อัพเดทปุ่ม Add Event
      updateAddEventButton()
    })
  })

  function clearSelection() {
    selectedSlots.forEach(slot => {
      slot.classList.remove('selected', 'bg-blue-100', 'text-blue-800', 'border-blue-500')
    })
    selectedSlots.clear()
    selectedRoomId = null
    selectedDate = null
    selectedStartTime = null
    selectedEndTime = null
    updateAddEventButton()
  }

  function updateAddEventButton() {
    const addEventButton = document.querySelector('.add-event-button')
    if (addEventButton) {
      if (selectedSlots.size > 0) {
        addEventButton.classList.remove('opacity-50', 'cursor-not-allowed')
        addEventButton.classList.add('hover:bg-blue-600')
        addEventButton.href = `/bookings/new?room_id=${selectedRoomId}&date=${selectedDate}&start_time=${selectedStartTime}&end_time=${selectedEndTime}`
      } else {
        addEventButton.classList.add('opacity-50', 'cursor-not-allowed')
        addEventButton.classList.remove('hover:bg-blue-600')
        addEventButton.href = '#'
      }
    }
  }
})
</script>